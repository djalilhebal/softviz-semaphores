* {
  /* Use natural box layout model */
  box-sizing: border-box;
  margin: 0 auto;
  padding: 0;
}

body {
  background: #efefef;
  text-align: center;
}

header {
  padding: 1em;
}

a {
  color: purple;
}

code {
  background: dimgray;
  color: white;
  padding: 1px 2px;
}

ul {
  list-style-type: square;
  margin: inherit;
}

/********************************/

main {
  margin: 10px auto;
  background: #ccc;
  padding: 25px;
  max-width: 900px;
}

fieldset {
  border: 0px;
}

table {
  background: white;
  width: 100%;
}

#user-vars {
  background: white;
  text-align: left;
  padding: 5px;
  margin-bottom: 5px;
  line-height: 2;
  font-size: 17px;
}

#user-vars input {
  color: blue;
  font-size: 17px;
  min-width: 280px;
  outline: none;
  border: 0;
  border-bottom: 2px dashed;
}
#user-vars input:focus {
  border-bottom: 2px solid;
}

textarea {
  color: blue;
  height: 150px;
  width: 200px;
  padding: 3px;
  /* outline: none; */
}
textarea[title] {
  background-color: red;
  color: black;
}

#buttons {
  margin: 5px 0;
}

#buttons button {
  border: 3px solid rebeccapurple;
  padding: 5px;
  background: purple;
  color: white;
  cursor: pointer;
  font-size: 1em;
  font-weight: bold;
}
#buttons button[disabled], fieldset[disabled] #buttons button {
  font-weight: normal;
  cursor: not-allowed;
  background: dimgray;
}

/********************************/

#sim {
  /* itch.io uses 640x360 by default */
  width: 640px;
  height: 360px;
  display: block;
  position: relative;
  background: black;
  border: 2px solid black;
  margin: 5px auto;
}

#sim > * {
  position: absolute;
}

#light-1, #light-2 {
  background-color: red;
  background-image: url(images/traffic-lights-red.svg);
  width: 50px;
  height: 50px;
  display: inline-block;
  border-radius: 50%;
  border: 3px solid transparent;
}
#sim[data-ctrl-queued="true"] #light-1, #sim[data-ctrl-queued="true"] #light-2 {
  border-color: yellow;
}

#sim[data-light="0"] #light-1, #sim[data-light="0"] #light-2 {
  background-color: gray !important;
}
#sim[data-light="1"] #light-1 {
  background-image: url(images/traffic-lights-green.svg);
  background-color: green;
}
#sim[data-light="2"] #light-2 {
  background-image: url(images/traffic-lights-green.svg);
  background-color: green;
}

#light-1 {
  top: 75px;
  left: 120px;
}
#light-2 {
  top: 180px;
}

#lane-1, #lane-2 {
  background: white;
  display: flex;
  z-index: 1;
}
#lane-1 {
  flex-direction: column-reverse;
  left: 180px;
  width: 50px;
  height: 100%;
  /* To 'hold' vehicles before the intersection */
  padding-bottom: 150px;
}
#lane-2 {
  bottom: 70px;
  height: 50px;
  width: 100%;
  /* To 'hold' vehicles before the intersection */
  padding-left: 255px;
}

#intersection {
  background: white;
  width: 100px;
  height: 100px;
  border-radius: 50%;
  display: grid;
  place-items: center center;
  top: 210px;
  left: 155px;
  z-index: 2;
}
#intersection[data-state="collision"] {
  background: radial-gradient(red, transparent);
}

.vehicle {
  width: 45px;
  height: 45px;
  display: inline-block;
  background-color: black;
  background-repeat: no-repeat;
  background-position: center;
  margin: 2px;
  opacity: 1;
  transition: opacity 2s, transform 1s;
}
.car { background-image: url(images/city-car.svg); }
.truck { background-image: url(images/truck.svg); }

.vehicle[data-direction="south"] { transform: rotateZ(90deg); }
.vehicle[data-direction="west"] { transform: rotateY(180deg); }

#intersection[data-state="normal"] .vehicle[data-state="leaving"] {
  opacity: 0;
}
#intersection[data-state="normal"] .vehicle[data-state="leaving"][data-direction="south"] {
  transform:
    translateY(70px)
    rotateZ(90deg);
}
#intersection[data-state="normal"] .vehicle[data-state="leaving"][data-direction="west"] {
  transform:
    translateX(-75px)
    rotateY(180deg);
}

/********************************/

section, footer {
  background: gainsboro;
  text-align: left;
  margin: 10px;
  padding: 10px;
}

section pre {
  white-space: pre-line;
}

footer {
  text-align: center;
}
